% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmdstan.R
\name{add_file_to_model_dir}
\alias{add_file_to_model_dir}
\alias{add_stan_file}
\alias{add_standata_file}
\alias{add_stan_init}
\title{Attaches a file to a model}
\usage{
add_stan_file(.mod, .source_file = NULL)

add_standata_file(.mod, .source_file = NULL)

add_stan_init(.mod, .source_file = NULL)
}
\arguments{
\item{.mod}{a \verb{bbi_\{.model_type\}_model} object}

\item{.source_file}{If \code{NULL}, the default, create an empty scaffold file
at the destination path. If not \code{NULL}, pass a path to a file that
will be copied to the destination path. Use this if you have a
file elsewhere on disk that you would like to use for this model.}

\item{.overwrite}{Logical scalar for whether to overwrite and existing
file at the destination path. If \code{is.null(.source_file)} this defaults
to \code{FALSE}, forcing the user to explicitly confirm overwriting an
existing file with a scaffold. However, \strong{if \code{.source_file} is passed
then \code{.overwrite} defaults to \code{TRUE}}, assuming that the user intends
to use the \code{.source_file} instead of the existing file.}
}
\description{
These functions take a model object and create the appropriate
file in the required location. If \code{.source_file} argument is used,
this file will be copied to the location. Otherwise, a scaffold of
the required file is created in that location. \strong{Note, this primarily
intended for Stan models} which require a number of required files.
Users can call \code{check_stan_model(.mod)} to see if any of these
files are missing.
}
\section{Functions}{
\itemize{
\item \code{add_stan_file}: Adds a \code{.stan} model file

\item \code{add_standata_file}: Adds a \code{.stan} model file

\item \code{add_stan_init}: Adds a \code{.stan} model file
}}

