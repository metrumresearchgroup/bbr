% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/new-model.R
\name{new_model}
\alias{new_model}
\title{Create new model object}
\usage{
new_model(
  .path,
  .description = NULL,
  .based_on = NULL,
  .tags = NULL,
  .bbi_args = NULL,
  .overwrite = FALSE,
  .star = NULL,
  .model_type = c("nonmem")
)
}
\arguments{
\item{.path}{Path to save the new model. Will be the path to the model file
and YAML file (both without extension), and the path to the output
directory.}

\item{.description}{Character scalar description of new model run. This will
be stored in the yaml (and can be viewed later in \code{run_log()}).}

\item{.based_on}{Character scalar or vector of paths to other models that
this model was "based on." These are used to reconstuct model developement
and ancestry. \strong{Paths must be relative to \code{.yaml_path}.}}

\item{.tags}{A character scalar or vector with any user tags to be added to
the YAML file}

\item{.bbi_args}{A named list specifying arguments to pass to bbi
formatted like \code{list("nm_version" = "nm74gf_nmfe", "json" = T, "threads" = 4)}. Run \code{\link[=print_bbi_args]{print_bbi_args()}} to see valid arguments. These will be written
into YAML file.}

\item{.overwrite}{If \code{FALSE}, the default, error if a file already exists at
\code{.yaml_path}. If \code{TRUE} overwrite existing file and output directory, if
they exist.}

\item{.star}{Boolean, marks model to indicate special interest level.}

\item{.model_type}{Character scaler to specify type of model being created
(used for S3 class). Currently only \code{'nonmem'} is supported.}
}
\value{
S3 object of class \verb{bbi_\{.model_type\}_model} that can be passed to
\code{submit_model()}, \code{model_summary()}, etc.
}
\description{
Creates new model object by specifying relevant information as arguments.
Also creates necessary YAML file for using functions like \code{add_tags()} and
\code{run_log()} later. Will look for an associated model file (control stream) on
disk and throw an error if it doesn't find one.
}
\seealso{
\code{\link[=copy_model_from]{copy_model_from()}}, \code{\link[=read_model]{read_model()}}
}
