% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bbr.R
\name{bbi_exec}
\alias{bbi_exec}
\title{Execute call to bbi}
\usage{
bbi_exec(
  .cmd_args,
  .dir = ".",
  .verbose = FALSE,
  .wait = FALSE,
  .bbi_exe_path = getOption("bbr.bbi_exe_path"),
  .check_status = TRUE,
  ...
)
}
\arguments{
\item{.cmd_args}{A character vector of command line arguments for the execution call}

\item{.dir}{The working directory to run command in. Defaults to "."}

\item{.verbose}{Print stdout and stderr as process runs #### NOT IMPLEMENTED?}

\item{.wait}{If true, don't return until process has exited.}

\item{.bbi_exe_path}{Path to bbi executable}

\item{.check_status}{Whether to signal an error if the command has a non-zero
exit code.}

\item{...}{arguments to pass to processx::process$new()}
}
\value{
An S3 object of class \code{bbi_process} with the following elements
\itemize{
\item process -- The process object (see ?processx::process$new for more
details on what you can do with this).
\item stdout -- the stdout and stderr from the process, if \code{.wait = TRUE}. If
\code{.wait = FALSE} this contain a message with the tempfile path where stdout
and stderr have been redirected.
\item bbi -- character scalar with the execution path used for bbi.
\item cmd_args -- character vector of all command arguments passed to the
process.
\item working_dir -- the directory the command was run in, passed through from
.dir argument.
}
}
\description{
Private implementation function that executes a bbi call (\verb{bbi ...}) with
processx::process$new()
}
\keyword{internal}
