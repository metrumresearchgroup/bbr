% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrix-handling.R
\name{mod_matrix}
\alias{mod_matrix}
\title{Modify a matrix to be a variance-covariance matrix, or the inverse operation}
\usage{
mod_matrix(mat, mat_opt, inverse = FALSE)
}
\arguments{
\item{mat}{a matrix}

\item{mat_opt}{tibble of matrix options. Should be a single row returned from
\code{get_matrix_opts()}}

\item{inverse}{Logical. If \code{TRUE}, perform the inverse operation. This assumes
the matrix is currently a variance-covariance matrix.}
}
\description{
Modify a matrix to be a variance-covariance matrix, or the inverse operation
}
\details{
\subsection{Example}{

\strong{Setup:}

\if{html}{\out{<div class="sourceCode">}}\preformatted{# Get initial estimates
initial_est <- get_initial_est(.mod)

# Get omega matrices from model (one matrix for each record)
sub_mats <- get_sub_mat(initial_est$omegas)

# Get matrix options
mat_opts <- attr(initial_est$omegas, "mat_opts")
}\if{html}{\out{</div>}}

\strong{Modify the matrices:}

\if{html}{\out{<div class="sourceCode">}}\preformatted{# Make sub-matrices variance-covariance
sub_mats_var <- purrr::imap(sub_mats, function(mat, rec_n)\{
  mod_matrix(mat, mat_opt = mat_opts[rec_n,])
\})

# Inverse operation
sub_mats_inv <- purrr::imap(mat_var_cat, function(mat, rec_n)\{
  mod_matrix(mat, mat_opt = mat_opts[rec_n,], inverse = TRUE)
\})

# Inverse operation returns matrices to original format
purrr::walk2(sub_mats_inv, sub_mats, function(mat, mat_orig)\{
  all.equal(mat_orig, mat)
\})
}\if{html}{\out{</div>}}
}
}
\keyword{internal}
