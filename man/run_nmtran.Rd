% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run-nmtran.R
\name{run_nmtran}
\alias{run_nmtran}
\title{Interface for running \code{NM-TRAN} on model objects}
\usage{
run_nmtran(
  .mod,
  .bbi_args = list(prdefault = FALSE, tprdefault = FALSE, maxlim = 2),
  .nonmem_version = NULL,
  .config_path = NULL,
  run_dir = tempdir(),
  clean = TRUE
)
}
\arguments{
\item{.mod}{A \code{bbi_nonmem_model} object.}

\item{.bbi_args}{A named list specifying arguments to pass to \code{NM-TRAN}.
Similar to the \code{.bbi_args} argument defined in \code{\link[=submit_model]{submit_model()}}, though here
only \code{prdefault}, \code{tprdefault}, and \code{maxlim} flags are passed to \code{NM-TRAN}.
See \code{\link[=print_bbi_args]{print_bbi_args()}} for more details.}

\item{.nonmem_version}{Character scalar for default version of NONMEM to use.
If left \code{NULL}, will look for the default version specified in the provided
\code{bbi} configuration file.}

\item{.config_path}{Path to a bbi configuration file. If \code{NULL}, the
default, will attempt to use a \code{bbi.yaml} in the same directory as the
model.}

\item{run_dir}{Directory to run \code{NM-TRAN} in. Only relevant if \code{clean = FALSE}.}

\item{clean}{Logical (\code{T}/\code{F}). If \code{FALSE}, don't delete the temporary folder
containing the \code{NM-TRAN} run, which will be stored in the current working
directory.}
}
\description{
Function to run \code{NM-TRAN} on a model object to validate its control stream
for correct coding before submission. The \code{NM-TRAN} dataset (\code{FDATA}) and
other \code{NONMEM} artifacts can be further inspected by keeping the run directory
around.
}
\details{
\code{NM-TRAN} is a preprocessor for \code{NONMEM} that translates user-specified
control stream data and instructions into a form executable by \code{NONMEM}.

Note that \code{nmtran_presort} is run ahead of \code{NM-TRAN} for \code{NONMEM} versions
\code{'nm74gf'}, \code{'nm74gf_nmfe'}, and \code{'nm75'}.
\itemize{
\item \code{nmtran_presort} is an supplementary utility that preprocesses the control
stream to ensure it is in the correct format for \code{NM-TRAN}. It is particularly
relevant for handling specific data manipulations and ensuring compatibility
with the \code{NM-TRAN} executable.
}
}
\examples{
\dontrun{

mod <- read_model(file.path(MODEL_DIR, 1))
run_nmtran(mod, .nonmem_version = "nm75")

# Save the run directory for manual inspection
run_nmtran(mod, clean = FALSE, run_dir = getwd())

}

}
