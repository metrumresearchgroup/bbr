% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copy-model-from.R
\name{copy_model_from_impl}
\alias{copy_model_from_impl}
\title{Copy model from an existing model}
\usage{
copy_model_from_impl(
  .parent_mod,
  .new_model,
  .description = NULL,
  .based_on_additional = NULL,
  .add_tags = NULL,
  .star = NULL,
  .inherit_tags = FALSE,
  .update_model_file = TRUE,
  .overwrite = FALSE,
  .model_type = c("nonmem", "stan")
)
}
\arguments{
\item{.parent_mod}{S3 object of class \verb{bbi_\{.model_type\}_model} to be used as the basis for copy.}

\item{.new_model}{Path to the new model, either absolute or relative to the
path to \code{.parent_mod}. Represents an absolute model path, which is the path
to the YAML file and model file, both without extension, and the output
directory (once the model is run). Numeric values will be coerced to
character. If \code{NULL}, the default, will try to increment to the next integer
in the destination directory. See examples for usage.}

\item{.description}{Character scalar description of new model run. This will
be stored in the yaml (and can be viewed later in \code{run_log()}).}

\item{.based_on_additional}{Character vector of path(s) to other models that
this model was "based on." These are used to reconstuct model developement
and ancestry. \strong{Paths must be relative to \code{.new_model} path.} Note that
the \code{.parent_model} will automatically be added to the \code{based_on} field, so
no need to include that here.}

\item{.add_tags}{Character vector with any new tags(s) to be added to
\verb{\{.new_model\}.yaml}}

\item{.star}{Boolean, marks model to indicate special interest level.}

\item{.inherit_tags}{If \code{FALSE}, the default, new model will only have any
tags passed to \code{.add_tags} argument. If \code{TRUE} inherit any tags from
\code{.parent_mod}, with any tags passed to \code{.add_tags} appended.}

\item{.update_model_file}{\strong{Only relevant for NONMEM models.} If \code{TRUE}, the
default, update the \verb{$PROBLEM} line in the new control stream. If \code{FALSE},
\verb{\{.new_model\}.[mod|ctl]} will be an exact copy of its parent control
stream.}

\item{.overwrite}{If \code{FALSE}, the default,  function will error if a model
file already exists at specified \code{.new_model} path. If \code{TRUE} any existing
file at \code{.new_model} will be overwritten silently.}
}
\value{
S3 object with the same class as \code{.parent_mod}
}
\description{
Private implementation function called by \code{copy_model_from()} dispatches.
Create new new .yaml and other necessary files based on a previous model.
Used for iterating on model development. Also fills in necessary YAML fields
for using \code{run_log()} later.
}
\keyword{internal}
