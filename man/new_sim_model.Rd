% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vpc-simulation.R
\name{new_sim_model}
\alias{new_sim_model}
\alias{make_sim_spec}
\title{Create a simulation model object from an existing model}
\usage{
new_sim_model(
  .mod,
  n = 200,
  seed = 1234,
  sim_cols = c("DV", "PRED"),
  .join_col = "NUM",
  .sim_dir = get_output_dir(.mod),
  .inherit_tags = TRUE,
  .overwrite = FALSE
)

make_sim_spec(.sim, sim_args, .overwrite = FALSE)
}
\arguments{
\item{.mod}{a \code{bbi_nonmem_model} object.}

\item{n}{Number of simulations/subproblems. Adds \code{SUBPROBLEMS=n} to a
\verb{$SIMULATION} record.}

\item{seed}{A seed for simulation. Appended to \verb{$SIMULATION} record.}

\item{sim_cols}{Character column name(s) defining the simulated values to
table out.}

\item{.join_col}{Character column name(s) used to join table files post
execution. Gets appended to the generated \verb{$TABLE} record. See
\code{\link[=nm_join_sim]{nm_join_sim()}} documentation for details. Defaults to \code{'NUM'}.}

\item{.sim_dir}{A directory for holding the new simulation model. Defaults to
the output directory of \code{.mod}.}

\item{.inherit_tags}{If \code{TRUE}, the default, inherit any tags from \code{.mod}.}

\item{.overwrite}{If \code{FALSE}, the default,  function will error if a model
file already exists at specified \code{.new_model} path. If \code{TRUE} any existing
file at \code{.new_model} will be overwritten silently.}

\item{.sim}{a \code{bbi_nmsim_model} object}

\item{sim_args}{named list defining the \code{seed}, and \code{n} simulations.}
}
\value{
S3 object of class \code{bbi_nmsim_model}.
}
\description{
Create a simulation model object from an existing model
}
\details{
\code{new_sim_model} does the following things:
\itemize{
\item Checks that \code{.mod} was previously executed and tabled out an \code{.MSF} file
(i.e. \verb{$EST MSFO=1.MSF}).
\itemize{
\item \strong{Note:} The \code{.MSF} file must have an upper case extension, otherwise
it will be cleaned up after submission
}
\item Performs various checks to confirm the status of \code{.mod} and contents of its
control stream.
\item Creates a new \code{bbi_nmsim_model} object with the following differences from
the original control stream:
\itemize{
\item Removes the following record types for simulation: \verb{$EST}, \verb{$COV},
\verb{$TABLE}, \verb{$SIMULATION}
\item Removes PK and prior records: \verb{$PRIOR}, \verb{$THETA/$THETAP/$THETAPV},
\verb{$OMEGA/$OMEGAP/$OMEGAPD}, \verb{$SIGMA/$SIGMAP/$SIGMAPD}
\item Adds a new custom \verb{$SIMULATION} record using user specified values (e.g.
\code{seed} and \code{n}). \code{TRUE=FINAL} is appended to ensure the final values are
used rather than the initial estimates.
\item Adds a new \verb{$TABLE} record tabling out simulated values and \code{.join_col}
column(s)
\item Adds a new \verb{$MSFI} record (run with \code{NOMSFTEST}) pointing to the \code{.MSF}
file of \code{.mod}
}
}
}
\section{Functions}{
\itemize{
\item \code{make_sim_spec()}: Store simulation run details in a specification
file before submission, which is stored in the output directory of the parent
model.

}}
\examples{
\dontrun{

# Create new `nmsim` model object
.sim <- new_sim_model(
  .mod,
  n = 500, seed = 1234,
  .join_col = c("NUM", "ID")
)

# Store run details in specification file
#  - this is why these functions aren't exported
make_sim_spec(
  .sim,
  sim_args = list(n = 500, seed = 1234),
 .join_col = c("NUM", "ID")
)

# Visualize changes
model_diff(.sim)

# Submit
submit_model(.sim)
}

}
\seealso{
nm_join_sim
}
\keyword{internal}
