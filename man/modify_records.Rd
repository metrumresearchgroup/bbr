% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify-records.R
\name{modify_records}
\alias{modify_records}
\alias{safe_read_ctl}
\alias{modify_prob_statement}
\alias{modify_data_path_ctl}
\alias{remove_records}
\title{Modify options and records from a \code{NONMEM} control stream file}
\usage{
safe_read_ctl(mod)

modify_prob_statement(mod, prob_text = NULL)

modify_data_path_ctl(mod, data_path)

remove_records(mod, type = c("covariance", "table"))
}
\arguments{
\item{mod}{a bbr model object}

\item{prob_text}{If \code{NULL} return the current \verb{$PROB} statement. If a
character string, set the problem statement to that value.}

\item{data_path}{Data path to set in a \verb{$DATA} record.}

\item{type}{type of record to remove. Only \code{'covariance'} and \code{'table'} are
currently supported}
}
\description{
Modify options and records from a \code{NONMEM} control stream file
}
\details{
\itemize{
\item \code{safe_read_ctl()} is called internally within the other functions, though
it can also be used outside of that context.
\item The other functions will read in the control stream, make any modifications,
and then save out the updated control stream. \code{modify_prob_statement()} is
the only function that can \emph{also} optionally return a record option (see
\code{prob_text} argument).
}
}
\section{Functions}{
\itemize{
\item \code{safe_read_ctl()}: Safely read in a \code{NONMEM} control stream file via
\code{nmrec}

\item \code{modify_prob_statement()}: Modify or retrieve the \verb{$PROBLEM} statement from
a \code{NONMEM} control stream file.

\item \code{modify_data_path_ctl()}: Modify the specified data path in a \code{NONMEM}
control stream file

\item \code{remove_records()}: Remove \emph{all records} of a given type from a \code{NONMEM}
control stream file

}}
\note{
To add support for more record types to \code{remove_records()}, run the following
command to see the record types of a given model supported by \code{nmrec}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{purrr::map_chr(ctl$records, "name")
}\if{html}{\out{</div>}}
}
\keyword{internal}
