% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow.R
\name{modify_spec_field}
\alias{modify_spec_field}
\alias{add_tags}
\alias{replace_tags}
\alias{add_decisions}
\alias{replace_decisions}
\alias{add_description}
\alias{replace_description}
\alias{add_based_on}
\alias{replace_based_on}
\title{Implementation function for updating fields in a `bbi_{.model_type}_spec` object
Also reconciles the object with the corresponding YAML before modifying and then writes the modified object back to the YAML}
\usage{
modify_spec_field(.spec, .field, .value, .append = TRUE, .unique = TRUE)

add_tags(.spec, .tags)

replace_tags(.spec, .tags)

add_decisions(.spec, .decisions)

replace_decisions(.spec, .decisions)

add_description(.spec, .description)

replace_description(.spec, .description)

add_based_on(.spec, .based_on)

replace_based_on(.spec, .based_on)
}
\arguments{
\item{.spec}{The `bbi_{.model_type}_spec` object to modify}

\item{.field}{Character scaler of the name of the component to modify}

\item{.value}{Whatever is to be added to `.spec[[.field]]`, typically a character scaler or vector}

\item{.append}{Boolean for whether to concatenate new values with currently present values. TRUE by default. If FALSE, new values will overwrite old values.}

\item{.unique}{Boolean for whether to de-duplicate `.spec[[.field]]` after adding new values. TRUE by default.}

\item{.tags}{Character scaler or vector of tags use as replacement}

\item{.decisions}{Character scaler or vector to use as replacement}

\item{.description}{Character scaler to use as replacement}

\item{.based_on}{Character scaler or vector to use as replacement}
}
\description{
Implementation function for updating fields in a `bbi_{.model_type}_spec` object
Also reconciles the object with the corresponding YAML before modifying and then writes the modified object back to the YAML

Add tags to a spec object and corresponding YAML

Replaces tags on a spec object and corresponding YAML with new tags

Append new decisions to the one(s) in a spec object and corresponding YAML

Replaces `decisions` field in a spec object and corresponding YAML with new values

Append new description to the one in a spec object and corresponding YAML

Replaces description field in a spec object and corresponding YAML with new description

Append new `based_on` tag to the one in a spec object and corresponding YAML

Replaces `based_on` field in a spec object and corresponding YAML with new values
}
